openapi: 3.1.0
info:
  title: English Forum - FastAPI
  version: 0.1.0
tags:
  - name: auth
    description: Provide ways to authenticate and authorize.
  - name: users
    description: Provide ways to interact with user info and other users.
  - name: posts
    description: Provides way to interact with posts.
  - name: comments
    description: Provides way to interact with comments.
  - name: other
paths:
  /login:
    post:
      tags:
        - auth
      summary: Login
      description: |-
        Handle login requests.

        Params:
            request: Login form with 2 fields: username and password. Email can be used as username
            db: Database session object.

        Returns:
            On success, return access token.

            On failure, return status code with detail.
      operationId: login_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /register:
    post:
      tags:
        - auth
      summary: Register
      description: |-
        Handle user registration requests.

        Params:
            request: Register form with 3 fields: username, password and email.
            db: Database session object.

        Returns:
            On success, return access token for automatic login. A verification mail will be sent.

            On failure, return status code with detail.
      operationId: register_register_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /register/verify:
    post:
      tags:
        - auth
      summary: Verify Account
      description: Verify email address of newly created account.
      operationId: verify_account_register_verify_post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: otp
          in: query
          required: true
          schema:
            type: string
            title: Otp
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /register/resend:
    post:
      tags:
        - auth
      summary: Resend Verification Email
      description: Send a new verification email.
      operationId: resend_verification_email_register_resend_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
  /refresh:
    post:
      tags:
        - auth
      summary: Refresh Access Token
      description: Get a new access token.
      operationId: refresh_access_token_refresh_post
      parameters:
        - name: rf_token
          in: query
          required: true
          schema:
            type: string
            title: Rf Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /logout:
    post:
      tags:
        - auth
      summary: Logout
      description: Handle user logout by invalidating tokens.
      operationId: logout_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - OAuth2PasswordBearer: []
  /recover:
    post:
      tags:
        - auth
      summary: Recover Password
      description: |-
        Handle password recovery requests.

        If the username or email exists, send a recovery email.
      operationId: recover_password_recover_post
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
            title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /recover/verify:
    post:
      tags:
        - auth
      summary: Verify Recovery Code
      operationId: verify_recovery_code_recover_verify_post
      parameters:
        - name: otp
          in: query
          required: true
          schema:
            type: string
            title: Otp
        - name: username
          in: query
          required: true
          schema:
            type: string
            title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /reset:
    post:
      tags:
        - auth
      summary: Reset Password
      description: Reset user password.
      operationId: reset_password_reset_post
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
            title: Token
        - name: new_password
          in: query
          required: true
          schema:
            type: string
            title: New Password
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /users:
    get:
      tags:
        - users
      summary: Get Current User
      description: Get current user info
      operationId: get_current_user_users_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleUser'
      security:
        - OAuth2PasswordBearer: []
  /user/{username}:
    get:
      tags:
        - users
      summary: Get User
      description: Get user info by username
      operationId: get_user_user__username__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleUser'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/bio:
    put:
      tags:
        - users
      summary: Update Bio
      description: Update user bio.
      operationId: update_bio_user_bio_put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: bio
          in: query
          required: true
          schema:
            type: string
            title: Bio
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/username:
    put:
      tags:
        - users
      summary: Update Username
      description: Update user username.
      operationId: update_username_user_username_put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
            title: Username
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/email:
    put:
      tags:
        - users
      summary: Update Email Address
      description: Update user email address
      operationId: update_email_address_user_email_put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
            title: Email
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/password:
    put:
      tags:
        - users
      summary: Update Password
      description: Update user password.
      operationId: update_password_user_password_put
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_update_password_user_password_put'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /cancel/emailchange/{token}:
    delete:
      tags:
        - users
      summary: Cancel Mail Update
      description: Cancel email change request.
      operationId: cancel_mail_update_cancel_emailchange__token__delete
      parameters:
        - name: token
          in: path
          required: true
          schema:
            type: string
            title: Token
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/email/confirm:
    post:
      tags:
        - users
      summary: Confirm Email Update
      description: Confirm email change request and update new email address.
      operationId: confirm_email_update_user_email_confirm_post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: otp
          in: query
          required: true
          schema:
            type: string
            title: Otp
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/{username}/{reltype}:
    post:
      tags:
        - users
      summary: Change Relationship
      description: |-
        Change user's relationship with another user.
        Relationship can be: follow, unfollow (block and unblock added later)
      operationId: change_relationship_user__username___reltype__post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
            title: Username
        - name: reltype
          in: path
          required: true
          schema:
            type: string
            title: Reltype
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      tags:
        - posts
      summary: Get Newsfeed
      description: |-
        Get latest posts for user's feed.

        Return a list of post_id. To retrieve their content, make GET request for each post.
      operationId: get_newsfeed__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: criteria
          in: query
          required: true
          schema:
            type: string
            title: Criteria
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Offset
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /posts/{post_id}:
    get:
      tags:
        - posts
      summary: Get Post
      description: Get the post by post_id
      operationId: get_post_posts__post_id__get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputPost'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - posts
      summary: Edit Post
      description: Edit a post
      operationId: edit_post_posts__post_id__put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_edit_post_posts__post_id__put'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - posts
      summary: Delete Post
      description: Delete a post
      operationId: delete_post_posts__post_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /posts/upload:
    post:
      tags:
        - posts
      summary: Upload Post
      description: Upload a post
      operationId: upload_post_posts_upload_post
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_post_posts_upload_post'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /posts/{post_id}/vote:
    post:
      tags:
        - posts
      summary: Vote Post
      description: |-
        Change user's vote of a post
        Vote type can be -1, 0, 1 for downvote, no vote or upvote
      operationId: vote_post_posts__post_id__vote_post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
        - name: vote_type
          in: query
          required: true
          schema:
            type: integer
            title: Vote Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /posts/{post_id}/comments:
    get:
      tags:
        - comments
      summary: Get Post Comments
      description: Get all comments of a post.
      operationId: get_post_comments_posts__post_id__comments_get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            title: Offset
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SimpleComment'
                title: Response Get Post Comments Posts  Post Id  Comments Get
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - comments
      summary: Upload Comment
      description: Upload a comment for a post
      operationId: upload_comment_posts__post_id__comments_post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
        - name: content
          in: query
          required: true
          schema:
            type: string
            title: Content
        - name: reply_comment_id
          in: query
          required: false
          schema:
            anyOf:
              - type: integer
              - type: 'null'
            title: Reply Comment Id
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /comments/{comment_id}:
    put:
      tags:
        - comments
      summary: Edit Comment
      operationId: edit_comment_comments__comment_id__put
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
            title: Comment Id
        - name: content
          in: query
          required: true
          schema:
            type: string
            title: Content
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - comments
      summary: Delete Comment
      description: Delete a comment
      operationId: delete_comment_comments__comment_id__delete
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
            title: Comment Id
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /comments/{comment_id}/vote:
    post:
      tags:
        - comments
      summary: Vote Comment
      description: |-
        Change user's vote of a comment
        Vote type can be -1, 0, 1 for downvote, no vote or upvote
      operationId: vote_comment_comments__comment_id__vote_post
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
            title: Comment Id
        - name: vote_type
          in: query
          required: true
          schema:
            type: integer
            title: Vote Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /search:
    get:
      tags:
        - other
      summary: Search
      operationId: search_search_get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: keyword
          in: query
          required: true
          schema:
            type: string
            title: Keyword
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /notifications:
    get:
      tags:
        - other
      summary: Get Notifications
      operationId: get_notifications_notifications_get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: start
          in: query
          required: false
          schema:
            type: integer
            default: 0
            title: Start
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputNotification'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /posts/{post_id}/exercise:
    get:
      tags:
        - other
      summary: Get Exercises
      description: Get exercises for practice based on post content using ✨AI
      operationId: get_exercises_posts__post_id__exercise_get
      security:
        - OAuth2PasswordBearer: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    Body_edit_post_posts__post_id__put:
      properties:
        attachments:
          anyOf:
            - items:
                type: string
                format: binary
              type: array
            - type: 'null'
          title: Attachments
        title:
          type: string
          title: Title
        content:
          type: string
          title: Content
        tag:
          type: string
          title: Tag
      type: object
      required:
        - title
        - content
        - tag
      title: Body_edit_post_posts__post_id__put
    Body_login_login_post:
      properties:
        grant_type:
          anyOf:
            - type: string
              pattern: ^password$
            - type: 'null'
          title: Grant Type
        username:
          type: string
          title: Username
        password:
          type: string
          format: password
          title: Password
        scope:
          type: string
          title: Scope
          default: ''
        client_id:
          anyOf:
            - type: string
            - type: 'null'
          title: Client Id
        client_secret:
          anyOf:
            - type: string
            - type: 'null'
          format: password
          title: Client Secret
      type: object
      required:
        - username
        - password
      title: Body_login_login_post
    Body_update_password_user_password_put:
      properties:
        password:
          type: string
          maxLength: 60
          minLength: 8
          title: Password
        new_password:
          type: string
          maxLength: 60
          minLength: 8
          title: New Password
      type: object
      required:
        - password
        - new_password
      title: Body_update_password_user_password_put
    Body_upload_post_posts_upload_post:
      properties:
        attachments:
          anyOf:
            - items:
                type: string
                format: binary
              type: array
            - type: 'null'
          title: Attachments
        title:
          type: string
          title: Title
        content:
          type: string
          title: Content
        tag:
          type: string
          title: Tag
      type: object
      required:
        - title
        - content
        - tag
      title: Body_upload_post_posts_upload_post
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    OutputNotification:
      properties:
        actor_id:
          type: integer
          title: Actor Id
        action_type:
          type: string
          title: Action Type
        action_id:
          type: integer
          title: Action Id
        is_read:
          type: boolean
          title: Is Read
        brief:
          type: string
          title: Brief
      type: object
      required:
        - actor_id
        - action_type
        - action_id
        - is_read
        - brief
      title: OutputNotification
    OutputPost:
      properties:
        post_id:
          type: integer
          title: Post Id
        title:
          type: string
          title: Title
        content:
          type: string
          title: Content
        vote_count:
          type: integer
          title: Vote Count
        user__count:
          type: integer
          title: User  Count
        comment_count:
          type: integer
          title: Comment Count
        created_at:
          type: string
          format: date-time
          title: Created At
        is_modified:
          type: boolean
          title: Is Modified
        attachments:
          anyOf:
            - items:
                $ref: '#/components/schemas/SimpleAttachment'
              type: array
            - type: 'null'
          title: Attachments
      type: object
      required:
        - post_id
        - title
        - content
        - vote_count
        - user__count
        - comment_count
        - created_at
        - is_modified
        - attachments
      title: OutputPost
    RegisterRequest:
      properties:
        username:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_.]+{7, 49}
          title: Username
        password:
          type: string
          maxLength: 255
          minLength: 8
          title: Password
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
        - username
        - password
        - email
      title: RegisterRequest
    SimpleAttachment:
      properties:
        media_url:
          type: string
          title: Media Url
        media_type:
          type: string
          title: Media Type
        media_metadata:
          type: string
          title: Media Metadata
        index:
          type: integer
          title: Index
      type: object
      required:
        - media_url
        - media_type
        - media_metadata
        - index
      title: SimpleAttachment
    SimpleComment:
      properties:
        author_id:
          type: integer
          title: Author Id
        content:
          type: string
          title: Content
        vote_count:
          type: integer
          title: Vote Count
        user_vote:
          type: integer
          title: User Vote
        created_at:
          type: string
          format: date-time
          title: Created At
        is_modified:
          type: boolean
          title: Is Modified
      type: object
      required:
        - author_id
        - content
        - vote_count
        - user_vote
        - created_at
        - is_modified
      title: SimpleComment
    SimpleUser:
      properties:
        username:
          type: string
          title: Username
        bio:
          anyOf:
            - type: string
            - type: 'null'
          title: Bio
        avatar_url:
          anyOf:
            - type: string
            - type: 'null'
          title: Avatar Url
      type: object
      required:
        - username
        - bio
        - avatar_url
      title: SimpleUser
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: /login
