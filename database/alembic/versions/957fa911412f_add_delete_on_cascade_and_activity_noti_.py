"""Add delete on cascade and activity, noti, following, votes tables

Revision ID: 957fa911412f
Revises: bb775f332b64
Create Date: 2025-10-09 09:12:25.614185

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '957fa911412f'
down_revision: Union[str, Sequence[str], None] = 'bb775f332b64'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activities',
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('actor_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.Text(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('activity_id')
    )
    op.create_table('following',
    sa.Column('rel_id', sa.Integer(), nullable=False),
    sa.Column('follower_id', sa.Integer(), nullable=True),
    sa.Column('following_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('unfollow', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['follower_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['following_user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rel_id')
    )
    op.create_table('notifications',
    sa.Column('noti_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.activity_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('noti_id')
    )
    op.create_table('post_votes',
    sa.Column('rel_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.post_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rel_id')
    )
    op.create_table('comment_votes',
    sa.Column('rel_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('value', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.comment_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rel_id')
    )
    op.drop_constraint(op.f('attachments_ibfk_1'), 'attachments', type_='foreignkey')
    op.create_foreign_key(None, 'attachments', 'posts', ['post_id'], ['post_id'], ondelete='CASCADE')
    op.add_column('comments', sa.Column('vote_count', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('comments_ibfk_1'), 'comments', type_='foreignkey')
    op.drop_constraint(op.f('comments_ibfk_2'), 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'users', ['author_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'comments', 'posts', ['post_id'], ['post_id'], ondelete='CASCADE')
    op.drop_column('comments', 'vote')
    op.drop_constraint(op.f('credentials_ibfk_1'), 'credentials', type_='foreignkey')
    op.create_foreign_key(None, 'credentials', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.add_column('posts', sa.Column('vote_count', sa.Integer(), nullable=False))
    op.add_column('posts', sa.Column('tag', sa.Text(), nullable=False))
    op.drop_constraint(op.f('posts_ibfk_1'), 'posts', type_='foreignkey')
    op.create_foreign_key(None, 'posts', 'users', ['author_id'], ['user_id'], ondelete='CASCADE')
    op.drop_column('posts', 'vote')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('posts', sa.Column('vote', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'posts', type_='foreignkey')
    op.create_foreign_key(op.f('posts_ibfk_1'), 'posts', 'users', ['author_id'], ['user_id'])
    op.drop_column('posts', 'tag')
    op.drop_column('posts', 'vote_count')
    op.drop_constraint(None, 'credentials', type_='foreignkey')
    op.create_foreign_key(op.f('credentials_ibfk_1'), 'credentials', 'users', ['user_id'], ['user_id'])
    op.add_column('comments', sa.Column('vote', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key(op.f('comments_ibfk_2'), 'comments', 'users', ['author_id'], ['user_id'])
    op.create_foreign_key(op.f('comments_ibfk_1'), 'comments', 'posts', ['post_id'], ['post_id'])
    op.drop_column('comments', 'vote_count')
    op.drop_constraint(None, 'attachments', type_='foreignkey')
    op.create_foreign_key(op.f('attachments_ibfk_1'), 'attachments', 'posts', ['post_id'], ['post_id'])
    op.drop_table('comment_votes')
    op.drop_table('post_votes')
    op.drop_table('notifications')
    op.drop_table('following')
    op.drop_table('activities')
    # ### end Alembic commands ###
